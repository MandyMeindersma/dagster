# Template with instructions
type: <string>  # Optional
attributes:  # Optional: Attributes details
  assets:  # Optional: List of object items
    - deps:  # Optional: The asset keys for the upstream assets that this asset depends on.
      - <string>
      description: <string>  # Optional: Human-readable description of the asset.
      metadata:  # Optional: Additional metadata for the asset.
      group_name: <string>  # Optional: Used to organize assets into groups, defaults to 'default'.
      skippable: <boolean>  # Optional: Whether this asset can be omitted during materialization, causing downstream dependencies to skip.
      code_version: <string>  # Optional: A version representing the code that produced the asset. Increment this value when the code changes.
      owners:  # Optional: A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.
        - <string>
      tags:  # Optional: Tags for filtering and organizing.
      kinds:  # Optional: A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.
        - <string>
      automation_condition: <string>  # Optional: The condition under which the asset will be automatically materialized.
      partitions_def:  # Optional: The partitions definition for the asset.
        type: <string>  # Optional
        start_date: <string>  # Required
        end_date: <string>  # Optional
        timezone: <string>  # Optional
        minute_offset: <integer>  # Optional
      key: <string>  # Required: A unique identifier for the asset.
  checks:  # Optional: List of object items
    - name: <string>  # Required
      asset: <string>  # Required: A unique identifier for the asset.
      additional_deps:  # Optional: List of string items
        - <string>
      description: <string>  # Optional
      blocking: <boolean>  # Optional
      metadata:  # Optional: Metadata details
      automation_condition: <string>  # Optional
  execution:  # Required: Execution details
    name: <string>  # Optional
    tags:  # Optional: Tags details
    description: <string>  # Optional
    pool: <string>  # Optional
    backfill_policy:  # Optional: Backfill_Policy details
      type: <string>  # Optional
    type: <string>  # Optional
    path: <string>  # Required
    args:  # Optional: List of string items
      - <string>
template_vars_module: <string>  # Optional
requirements:  # Optional: Describes dependencies for a component to load.
  env:  # Optional: List of string items
    - <string>
post_processing:  # Optional: Post_Processing details

# EXAMPLE VALUES:
type: "example_string"
attributes:
  assets:
    - deps:
        - "example_item_1"
        - "example_item_2"
      description: "example_string"
      metadata:
        example_key: "example_value"
      group_name: "example_string"
      skippable: true
      code_version: "example_string"
      owners:
        - "example_item_1"
        - "example_item_2"
      tags:
        key: "value"
      kinds:
        - "example_item_1"
        - "example_item_2"
      automation_condition: "example_string"
      partitions_def:
        type: "example_string"
        start_date: "example_string"
        end_date: "example_string"
        timezone: "example_string"
        minute_offset: 42
      key: "example_string"
  checks:
    - name: "example_string"
      asset: "example_string"
      additional_deps:
        - "example_item_1"
        - "example_item_2"
      description: "example_string"
      blocking: true
      metadata:
        example_key: "example_value"
      automation_condition: "example_string"
  execution:
    name: "example_string"
    tags:
      key: "value"
    description: "example_string"
    pool: "example_string"
    backfill_policy:
      type: "example_string"
    type: "example_string"
    path: "example_string"
    args:
      - "example_item_1"
      - "example_item_2"
template_vars_module: "example_string"
requirements:
  env:
    - "example_item_1"
    - "example_item_2"
post_processing:
  key: "value"